##############################################################################
#   Modules Revision 3.0
#   Providing a flexible user environment
#
#   File:		modules.50-cmds/%M%
#   Revision:		%I%
#   First Edition:	2023/10/31
#   Last Mod.:		%U%, %G%
#
#   Authors:		Xavier Delaruelle, xavier.delaruelle@cea.fr
#
#   Description:	Testuite testsequence
#   Command:		ml
#   Modulefiles:    err, foo, all, setenv
#   Sub-Command:
#
#   Comment:	%C{
#           Test error when several modulefiles are evaluated with
#           ml load and unload sub-commands
#		}C%
#
##############################################################################

skip_if_quick_mode

set mp $modpath.4
set mpre $modpathre.4
setenv_path_var MODULEPATH $mp

setenv_var MODULES_AUTO_HANDLING 1

set ans_forced [list]
lappend ans_forced [list out all-pre-out]
lappend ans_forced [list set TSPATH dir1]
lappend ans_forced [list set __MODULES_LMREFRESH all/1.0]
lappend ans_forced [list set _LMFILES_ $mp/all/1.0]
lappend ans_forced [list set LOADEDMODULES all/1.0]
lappend ans_forced [list set TS ok]
lappend ans_forced [list alias alall value]
lappend ans_forced [list out {funcall () { value; }; export -f funcall;}]
lappend ans_forced [list out {complete value compall;}]
lappend ans_forced [list chdir /tmp]
lappend ans_forced [list out all-out]

set ans_forced_tag [list]
lappend ans_forced_tag [list out all-pre-out]
lappend ans_forced_tag [list set TSPATH dir1]
lappend ans_forced_tag [list set __MODULES_LMREFRESH all/1.0]
lappend ans_forced_tag [list set _LMFILES_ $mp/all/1.0]
lappend ans_forced_tag [list set LOADEDMODULES all/1.0]
lappend ans_forced_tag [list set TS ok]
lappend ans_forced_tag [list unset __MODULES_LMTAG]
lappend ans_forced_tag [list alias alall value]
lappend ans_forced_tag [list out {funcall () { value; }; export -f funcall;}]
lappend ans_forced_tag [list out {complete value compall;}]
lappend ans_forced_tag [list chdir /tmp]
lappend ans_forced_tag [list out all-out]

set ans_depre_error_force [list]
lappend ans_depre_error_force [list out all-pre-out]
lappend ans_depre_error_force [list set TSPATH dir1]
lappend ans_depre_error_force [list unset TS1]
lappend ans_depre_error_force [list unset TS2]
lappend ans_depre_error_force [list set __MODULES_LMREFRESH all/1.0]
lappend ans_depre_error_force [list set LOADEDMODULES all/1.0]
lappend ans_depre_error_force [list set _LMFILES_ $mp/all/1.0]
lappend ans_depre_error_force [list unset __MODULES_LMPREREQ]
lappend ans_depre_error_force [list set TS ok]
lappend ans_depre_error_force [list alias alall value]
lappend ans_depre_error_force [list out {funcall () { value; }; export -f funcall;}]
lappend ans_depre_error_force [list out {complete value compall;}]
lappend ans_depre_error_force [list chdir /tmp]
lappend ans_depre_error_force [list out all-out]
lappend ans_depre_error_force [list ERR]

set ans_depre_unload_error_force [list]
lappend ans_depre_unload_error_force [list out all-pre-out]
lappend ans_depre_unload_error_force [list set TSPATH dir1]
lappend ans_depre_unload_error_force [list unset TS1]
lappend ans_depre_unload_error_force [list unset TS2]
lappend ans_depre_unload_error_force [list set __MODULES_LMREFRESH all/1.0]
lappend ans_depre_unload_error_force [list set __MODULES_LMPREREQ err/1.0&err/1.0|foo]
lappend ans_depre_unload_error_force [list set _LMFILES_ $mp/err/1.0:$mp/all/1.0]
lappend ans_depre_unload_error_force [list set LOADEDMODULES err/1.0:all/1.0]
lappend ans_depre_unload_error_force [list set TS ok]
lappend ans_depre_unload_error_force [list alias alall value]
lappend ans_depre_unload_error_force [list out {funcall () { value; }; export -f funcall;}]
lappend ans_depre_unload_error_force [list out {complete value compall;}]
lappend ans_depre_unload_error_force [list chdir /tmp]
lappend ans_depre_unload_error_force [list out all-out]

set ans_depun_error_force [list]
lappend ans_depun_error_force [list out all-pre-out]
lappend ans_depun_error_force [list set TSPATH dir1]
lappend ans_depun_error_force [list unset TS1]
lappend ans_depun_error_force [list unset TS2]
lappend ans_depun_error_force [list set __MODULES_LMREFRESH all/1.0]
lappend ans_depun_error_force [list unset __MODULES_LMPREREQ]
lappend ans_depun_error_force [list set _LMFILES_ $mp/all/1.0]
lappend ans_depun_error_force [list set LOADEDMODULES all/1.0]
lappend ans_depun_error_force [list set TS ok]
lappend ans_depun_error_force [list alias alall value]
lappend ans_depun_error_force [list out {funcall () { value; }; export -f funcall;}]
lappend ans_depun_error_force [list out {complete value compall;}]
lappend ans_depun_error_force [list chdir /tmp]
lappend ans_depun_error_force [list out all-out]

set ans_not_loaded [list]
lappend ans_not_loaded [list out all-pre-out]
lappend ans_not_loaded [list set TSPATH dir1]
lappend ans_not_loaded [list set __MODULES_LMREFRESH all/1.0]
lappend ans_not_loaded [list set _LMFILES_ $mp/err/1.0:$mp/all/1.0]
lappend ans_not_loaded [list set LOADEDMODULES err/1.0:all/1.0]
lappend ans_not_loaded [list set TS ok]
lappend ans_not_loaded [list alias alall value]
lappend ans_not_loaded [list out {funcall () { value; }; export -f funcall;}]
lappend ans_not_loaded [list out {complete value compall;}]
lappend ans_not_loaded [list chdir /tmp]
lappend ans_not_loaded [list out all-out]

set ans_single_force [list]
lappend ans_single_force [list unset _LMFILES_]
lappend ans_single_force [list unset LOADEDMODULES]

set ans_modfile_force [list]
lappend ans_modfile_force [list set __MODULES_LMCONFLICT lerr/1.0&err/1.0&foo/1.0]
lappend ans_modfile_force [list set _LMFILES_ $mp/lerr/1.0]
lappend ans_modfile_force [list set LOADEDMODULES lerr/1.0]

set ans_modfile_last_force [list]
lappend ans_modfile_last_force [list set __MODULES_LMCONFLICT lerr/1.0&foo/1.0&err/1.0]
lappend ans_modfile_last_force [list set _LMFILES_ $mp/lerr/1.0]
lappend ans_modfile_last_force [list set LOADEDMODULES lerr/1.0]

set ans_depre_load_exit_force [list]
lappend ans_depre_load_exit_force [list set LOADEDMODULES setenv/1.0]
lappend ans_depre_load_exit_force [list set _LMFILES_ $mp/setenv/1.0]
lappend ans_depre_load_exit_force [list unset __MODULES_LMPREREQ]
lappend ans_depre_load_exit_force [list ERR]

set ans_supersticky_forced [list]
lappend ans_supersticky_forced [list out all-pre-out]
lappend ans_supersticky_forced [list set TSPATH dir1]
lappend ans_supersticky_forced [list set __MODULES_LMREFRESH all/1.0]
lappend ans_supersticky_forced [list set _LMFILES_ $mp/err/1.0:$mp/all/1.0]
lappend ans_supersticky_forced [list set LOADEDMODULES err/1.0:all/1.0]
lappend ans_supersticky_forced [list set TS ok]
lappend ans_supersticky_forced [list alias alall value]
lappend ans_supersticky_forced [list out {funcall () { value; }; export -f funcall;}]
lappend ans_supersticky_forced [list out {complete value compall;}]
lappend ans_supersticky_forced [list chdir /tmp]
lappend ans_supersticky_forced [list out all-out]
lappend ans_supersticky_forced [list ERR]

set ans_continue_forced [list]
lappend ans_continue_forced [list out all-pre-out]
lappend ans_continue_forced [list set TSPATH dir1]
lappend ans_continue_forced [list set LOADEDMODULES all/1.0]
lappend ans_continue_forced [list set _LMFILES_ $mp/all/1.0]
lappend ans_continue_forced [list set __MODULES_LMREFRESH all/1.0]
lappend ans_continue_forced [list set TS ok]
lappend ans_continue_forced [list alias alall value]
lappend ans_continue_forced [list out {funcall () { value; }; export -f funcall;}]
lappend ans_continue_forced [list out {complete value compall;}]
lappend ans_continue_forced [list chdir /tmp]
lappend ans_continue_forced [list out all-out]
lappend ans_continue_forced [list ERR]

set ans_continue_not_loaded_forced [list]
lappend ans_continue_not_loaded_forced [list out all-pre-out]
lappend ans_continue_not_loaded_forced [list set TSPATH dir1]
lappend ans_continue_not_loaded_forced [list set __MODULES_LMREFRESH all/1.0]
lappend ans_continue_not_loaded_forced [list set _LMFILES_ $mp/all/1.0]
lappend ans_continue_not_loaded_forced [list set LOADEDMODULES all/1.0]
lappend ans_continue_not_loaded_forced [list set TS ok]
lappend ans_continue_not_loaded_forced [list alias alall value]
lappend ans_continue_not_loaded_forced [list out {funcall () { value; }; export -f funcall;}]
lappend ans_continue_not_loaded_forced [list out {complete value compall;}]
lappend ans_continue_not_loaded_forced [list chdir /tmp]
lappend ans_continue_not_loaded_forced [list out all-out]
lappend ans_continue_not_loaded_forced [list ERR]

set ans_continue_depre_forced [list]
lappend ans_continue_depre_forced [list out all-pre-out]
lappend ans_continue_depre_forced [list unset TS1]
lappend ans_continue_depre_forced [list set TSPATH dir1]
lappend ans_continue_depre_forced [list unset TS2]
lappend ans_continue_depre_forced [list unset __MODULES_LMPREREQ]
lappend ans_continue_depre_forced [list set _LMFILES_ $mp/all/1.0]
lappend ans_continue_depre_forced [list set LOADEDMODULES all/1.0]
lappend ans_continue_depre_forced [list set __MODULES_LMREFRESH all/1.0]
lappend ans_continue_depre_forced [list set TS ok]
lappend ans_continue_depre_forced [list alias alall value]
lappend ans_continue_depre_forced [list out {funcall () { value; }; export -f funcall;}]
lappend ans_continue_depre_forced [list out {complete value compall;}]
lappend ans_continue_depre_forced [list chdir /tmp]
lappend ans_continue_depre_forced [list out all-out]
lappend ans_continue_depre_forced [list ERR]

set ans_mix_depre_load_exit_force [list]
lappend ans_mix_depre_load_exit_force [list unset __MODULES_LMPREREQ]
lappend ans_mix_depre_load_exit_force [list set _LMFILES_ $mp/setenv/1.0]
lappend ans_mix_depre_load_exit_force [list set LOADEDMODULES setenv/1.0]
lappend ans_mix_depre_load_exit_force [list ERR]

set ans_forbidden_forced [list]
lappend ans_forbidden_forced [list out all-pre-out]
lappend ans_forbidden_forced [list set TSPATH dir1]
lappend ans_forbidden_forced [list set __MODULES_LMREFRESH all/1.0]
lappend ans_forbidden_forced [list set _LMFILES_ $mp/all/1.0]
lappend ans_forbidden_forced [list set LOADEDMODULES all/1.0]
lappend ans_forbidden_forced [list set TS ok]
lappend ans_forbidden_forced [list unset __MODULES_LMTAG]
lappend ans_forbidden_forced [list alias alall value]
lappend ans_forbidden_forced [list out {funcall () { value; }; export -f funcall;}]
lappend ans_forbidden_forced [list out {complete value compall;}]
lappend ans_forbidden_forced [list chdir /tmp]
lappend ans_forbidden_forced [list out all-out]
lappend ans_forbidden_forced [list ERR]

set ans_mix_continue_forced [list]
lappend ans_mix_continue_forced [list out all-pre-out]
lappend ans_mix_continue_forced [list set TSPATH dir1]
lappend ans_mix_continue_forced [list set __MODULES_LMREFRESH all/1.0]
lappend ans_mix_continue_forced [list set _LMFILES_ $mp/err/1.0:$mp/all/1.0]
lappend ans_mix_continue_forced [list set LOADEDMODULES err/1.0:all/1.0]
lappend ans_mix_continue_forced [list set TS ok]
lappend ans_mix_continue_forced [list alias alall value]
lappend ans_mix_continue_forced [list out {funcall () { value; }; export -f funcall;}]
lappend ans_mix_continue_forced [list out {complete value compall;}]
lappend ans_mix_continue_forced [list chdir /tmp]
lappend ans_mix_continue_forced [list out all-out]
lappend ans_mix_continue_forced [list ERR]

set ans_continue_unload_fail [list]
lappend ans_continue_unload_fail [list out all-pre-out]
lappend ans_continue_unload_fail [list set TSPATH dir1]
lappend ans_continue_unload_fail [list set __MODULES_LMREFRESH all/1.0]
lappend ans_continue_unload_fail [list set LOADEDMODULES err/1.0:all/1.0]
lappend ans_continue_unload_fail [list set _LMFILES_ $mp/err/1.0:$mp/all/1.0]
lappend ans_continue_unload_fail [list set TS ok]
lappend ans_continue_unload_fail [list alias alall value]
lappend ans_continue_unload_fail [list out {funcall () { value; }; export -f funcall;}]
lappend ans_continue_unload_fail [list out {complete value compall;}]
lappend ans_continue_unload_fail [list chdir /tmp]
lappend ans_continue_unload_fail [list out all-out]
lappend ans_continue_unload_fail [list ERR]

set ans_continue_unload_fail2 [list]
lappend ans_continue_unload_fail2 [list out all-pre-out]
lappend ans_continue_unload_fail2 [list set TSPATH dir1]
lappend ans_continue_unload_fail2 [list set __MODULES_LMREFRESH all/1.0]
lappend ans_continue_unload_fail2 [list set _LMFILES_ $mp/err/1.0:$mp/all/1.0]
lappend ans_continue_unload_fail2 [list set LOADEDMODULES err/1.0:all/1.0]
lappend ans_continue_unload_fail2 [list set TS ok]
lappend ans_continue_unload_fail2 [list alias alall value]
lappend ans_continue_unload_fail2 [list out {funcall () { value; }; export -f funcall;}]
lappend ans_continue_unload_fail2 [list out {complete value compall;}]
lappend ans_continue_unload_fail2 [list chdir /tmp]
lappend ans_continue_unload_fail2 [list out all-out]
lappend ans_continue_unload_fail2 [list ERR]

set ans_continue_depre_unload_fail [list]
lappend ans_continue_depre_unload_fail [list out all-pre-out]
lappend ans_continue_depre_unload_fail [list set TSPATH dir1]
lappend ans_continue_depre_unload_fail [list unset TS1]
lappend ans_continue_depre_unload_fail [list unset TS2]
lappend ans_continue_depre_unload_fail [list set __MODULES_LMREFRESH all/1.0]
lappend ans_continue_depre_unload_fail [list set _LMFILES_ $mp/foo/1.0:$mp/err/1.0:$mp/all/1.0]
lappend ans_continue_depre_unload_fail [list set LOADEDMODULES foo/1.0:err/1.0:all/1.0]
lappend ans_continue_depre_unload_fail [list set TS ok]
lappend ans_continue_depre_unload_fail [list alias alall value]
lappend ans_continue_depre_unload_fail [list out {funcall () { value; }; export -f funcall;}]
lappend ans_continue_depre_unload_fail [list out {complete value compall;}]
lappend ans_continue_depre_unload_fail [list chdir /tmp]
lappend ans_continue_depre_unload_fail [list out all-out]
lappend ans_continue_depre_unload_fail [list ERR]

set ans_continue_load_fail [list]
lappend ans_continue_load_fail [list out all-pre-out]
lappend ans_continue_load_fail [list set TSPATH dir1]
lappend ans_continue_load_fail [list set LOADEDMODULES all/1.0]
lappend ans_continue_load_fail [list set _LMFILES_ $mp/all/1.0]
lappend ans_continue_load_fail [list set __MODULES_LMREFRESH all/1.0]
lappend ans_continue_load_fail [list set TS ok]
lappend ans_continue_load_fail [list alias alall value]
lappend ans_continue_load_fail [list out {funcall () { value; }; export -f funcall;}]
lappend ans_continue_load_fail [list out {complete value compall;}]
lappend ans_continue_load_fail [list chdir /tmp]
lappend ans_continue_load_fail [list out all-out]
lappend ans_continue_load_fail [list ERR]

set ans_continue_load_fail2 [list]
lappend ans_continue_load_fail2 [list out all-pre-out]
lappend ans_continue_load_fail2 [list set TSPATH dir1]
lappend ans_continue_load_fail2 [list set __MODULES_LMREFRESH all/1.0]
lappend ans_continue_load_fail2 [list set _LMFILES_ $mp/all/1.0]
lappend ans_continue_load_fail2 [list set LOADEDMODULES all/1.0]
lappend ans_continue_load_fail2 [list set TS ok]
lappend ans_continue_load_fail2 [list alias alall value]
lappend ans_continue_load_fail2 [list out {funcall () { value; }; export -f funcall;}]
lappend ans_continue_load_fail2 [list out {complete value compall;}]
lappend ans_continue_load_fail2 [list chdir /tmp]
lappend ans_continue_load_fail2 [list out all-out]
lappend ans_continue_load_fail2 [list ERR]


if {[cmpversion $tclsh_version 8.6] == -1} {
    set custom_error_trace "    invoked from within
\"if \{\[info exists env(TESTSUITE_ABORT_ON_ERROR)\]\} \{
    switch -- \$env(TESTSUITE_ABORT_ON_ERROR) \{
        bad - load_last_bad - load_first_bad - load-...\""
} else {
    set custom_error_trace {}
}


#
# mix of module to load and unload (failure on 1 unloading module)
#

setenv_loaded_module [list foo/1.0 err/1.0] [list $mp/foo/1.0 $mp/err/1.0]

setenv_var TESTSUITE_ABORT_ON_ERROR bad

set line_num [expr {[cmpversion $tclsh_version 8.6] == -1 ? 2 : 5}]
set ts_bad [msg_unload err/1.0 [msg_moderr {invalid command name "bad"} bad $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]
testouterr_cmd bash {ml -foo/1.0 all/1.0 -err/1.0} ERR $ts_bad

set ts_bad_warn [msg_unload err/1.0 [msg_modwarn {invalid command name "bad"} bad $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]
testouterr_cmd bash {ml --force -foo/1.0 all/1.0 -err/1.0} $ans_forced $ts_bad_warn

setenv_var TESTSUITE_ABORT_ON_ERROR break

set ts_break [msg_unload err/1.0 $err_evalabort]
testouterr_cmd bash {ml all/1.0 -err/1.0 -foo/1.0} ERR $ts_break

set ts_break_warn [msg_unload err/1.0 $warn_evalabort]
testouterr_cmd bash {ml --force all/1.0 -err/1.0 -foo/1.0} $ans_forced $ts_break_warn


setenv_var TESTSUITE_ABORT_ON_ERROR exit

set ts_exit [msg_unload err/1.0 $err_evalabort]
testouterr_cmd bash {ml all/1.0 -err/1.0 -foo/1.0} ERR $ts_exit

set ts_exit_warn [msg_unload err/1.0 $warn_evalabort]
testouterr_cmd bash {ml --force all/1.0 -err/1.0 -foo/1.0} $ans_forced $ts_exit_warn


setenv_var TESTSUITE_ABORT_ON_ERROR continue

testouterr_cmd bash {ml all/1.0 -err/1.0 -foo/1.0} $ans_forced {}

testouterr_cmd bash {ml --force all/1.0 -err/1.0 -foo/1.0} $ans_forced {}


setenv_var TESTSUITE_ABORT_ON_ERROR error

set line_num [expr {[cmpversion $tclsh_version 8.6] == -1 ? 2 : 17}]
set ts_error_verbose [msg_unload err/1.0 [msg_moderr msg {error msg} $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]
testouterr_cmd bash {ml -v all/1.0 -err/1.0 -foo/1.0} ERR $ts_error_verbose

set ts_error_verbose_warn [msg_unload err/1.0 [msg_modwarn msg {error msg} $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_error_verbose_warn [msg_unload foo/1.0]\n
append ts_error_verbose_warn [msg_load all/1.0]
testouterr_cmd bash {ml --force -v all/1.0 -err/1.0 -foo/1.0} $ans_forced $ts_error_verbose_warn


setenv_var TESTSUITE_ABORT_ON_ERROR depre_load_error

setenv_loaded_module [list setenv/1.0 foo/1.0 err/1.0] [list $mp/setenv/1.0 $mp/foo/1.0 $mp/err/1.0]
setenv_var __MODULES_LMPREREQ err/1.0&err/1.0|foo
set line_num [expr {[cmpversion $tclsh_version 8.6] == -1 ? 2 : 28}]
set ts_depre_load_error [msg_load err/1.0 [msg_moderr msg {error msg} $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_depre_load_error [msg_unload foo/1.0 [err_depre err/1.0]]
testouterr_cmd bash {ml all/1.0 -foo/1.0 -setenv/1.0} ERR $ts_depre_load_error

set ts_depre_load_error_force [msg_load err/1.0 [msg_moderr msg {error msg} $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_depre_load_error_force [msg_unload foo/1.0 [err_depref err/1.0] {Unloading dependent: err/1.0}]
testouterr_cmd bash {ml --force all/1.0 -foo/1.0 -setenv/1.0} $ans_depre_error_force $ts_depre_load_error_force


setenv_var TESTSUITE_ABORT_ON_ERROR depre_unload_error

set line_num [expr {[cmpversion $tclsh_version 8.6] == -1 ? 2 : 34}]
set ts_depre_unload_error [msg_unload err/1.0 [msg_moderr msg {error msg} $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_depre_unload_error [msg_unload foo/1.0 [err_depun err/1.0]]
testouterr_cmd bash {ml all/1.0 -foo/1.0 -setenv/1.0} ERR $ts_depre_unload_error

set ts_depre_unload_error_force [msg_unload err/1.0 [msg_modwarn msg {error msg} $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_depre_unload_error_force [msg_top_unload foo/1.0 {} {} err/1.0]
testouterr_cmd bash {ml --force all/1.0 -foo/1.0 -setenv/1.0} $ans_depre_unload_error_force $ts_depre_unload_error_force


setenv_var TESTSUITE_ABORT_ON_ERROR depre_load_bad

setenv_loaded_module [list setenv/1.0 foo/1.0 err/1.0] [list $mp/setenv/1.0 $mp/foo/1.0 $mp/err/1.0]
setenv_var __MODULES_LMPREREQ err/1.0&err/1.0|foo
set line_num [expr {[cmpversion $tclsh_version 8.6] == -1 ? 2 : 40}]
set ts_depre_load_bad [msg_load err/1.0 [msg_moderr {invalid command name "bad"} bad $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_depre_load_bad [msg_unload foo/1.0 [err_depre err/1.0]]
testouterr_cmd bash {ml all/1.0 -foo/1.0 -setenv/1.0} ERR $ts_depre_load_bad

set ts_depre_load_bad_force [msg_load err/1.0 [msg_moderr {invalid command name "bad"} bad $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_depre_load_bad_force [msg_unload foo/1.0 [err_depref err/1.0] {Unloading dependent: err/1.0}]
testouterr_cmd bash {ml --force all/1.0 -foo/1.0 -setenv/1.0} $ans_depre_error_force $ts_depre_load_bad_force


setenv_var TESTSUITE_ABORT_ON_ERROR depre_unload_bad

set line_num [expr {[cmpversion $tclsh_version 8.6] == -1 ? 2 : 46}]
set ts_depre_unload_bad [msg_unload err/1.0 [msg_moderr {invalid command name "bad"} bad $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_depre_unload_bad [msg_unload foo/1.0 [err_depun err/1.0]]
testouterr_cmd bash {ml all/1.0 -foo/1.0 -setenv/1.0} ERR $ts_depre_unload_bad

set ts_depre_unload_bad_force [msg_unload err/1.0 [msg_modwarn {invalid command name "bad"} bad $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_depre_unload_bad_force [msg_top_unload foo/1.0 {} {} err/1.0]
testouterr_cmd bash {ml --force all/1.0 -foo/1.0 -setenv/1.0} $ans_depre_unload_error_force $ts_depre_unload_bad_force


setenv_var TESTSUITE_ABORT_ON_ERROR depre_load_break

setenv_loaded_module [list setenv/1.0 foo/1.0 err/1.0] [list $mp/setenv/1.0 $mp/foo/1.0 $mp/err/1.0]
setenv_var __MODULES_LMPREREQ err/1.0&err/1.0|foo
set ts_depre_load_break [msg_load err/1.0 $err_evalabort]\n\n
append ts_depre_load_break [msg_unload foo/1.0 [err_depre err/1.0]]
testouterr_cmd bash {ml all/1.0 -foo/1.0 -setenv/1.0} ERR $ts_depre_load_break

set ts_depre_load_break_force [msg_load err/1.0 $err_evalabort]\n\n
append ts_depre_load_break_force [msg_unload foo/1.0 [err_depref err/1.0] {Unloading dependent: err/1.0}]
testouterr_cmd bash {ml --force all/1.0 -foo/1.0 -setenv/1.0} $ans_depre_error_force $ts_depre_load_break_force


setenv_var TESTSUITE_ABORT_ON_ERROR depre_unload_break

set ts_depre_unload_break [msg_unload err/1.0 $err_evalabort]\n\n
append ts_depre_unload_break [msg_unload foo/1.0 [err_depun err/1.0]]
testouterr_cmd bash {ml all/1.0 -foo/1.0 -setenv/1.0} ERR $ts_depre_unload_break

set ts_depre_unload_break_force [msg_unload err/1.0 $warn_evalabort]\n\n
append ts_depre_unload_break_force [msg_top_unload foo/1.0 {} {} err/1.0]
testouterr_cmd bash {ml --force all/1.0 -foo/1.0 -setenv/1.0} $ans_depre_unload_error_force $ts_depre_unload_break_force


setenv_var TESTSUITE_ABORT_ON_ERROR depre_load_exit

setenv_loaded_module [list setenv/1.0 foo/1.0 err/1.0] [list $mp/setenv/1.0 $mp/foo/1.0 $mp/err/1.0]
setenv_var __MODULES_LMPREREQ err/1.0&err/1.0|foo
set ts_depre_load_exit [msg_load err/1.0 $err_evalabort]\n\n
append ts_depre_load_exit [msg_unload foo/1.0 [err_depre err/1.0]]
testouterr_cmd bash {ml all/1.0 -foo/1.0 -setenv/1.0} ERR $ts_depre_load_exit

set ts_depre_load_exit_force [msg_load err/1.0 $err_evalabort]\n\n
append ts_depre_load_exit_force [msg_unload foo/1.0 [err_depref err/1.0] {Unloading dependent: err/1.0}]
testouterr_cmd bash {ml --force all/1.0 -foo/1.0 -setenv/1.0} $ans_depre_load_exit_force $ts_depre_load_exit_force


setenv_var TESTSUITE_ABORT_ON_ERROR depre_unload_exit

set ts_depre_unload_exit [msg_unload err/1.0 $err_evalabort]\n\n
append ts_depre_unload_exit [msg_unload foo/1.0 [err_depun err/1.0]]
testouterr_cmd bash {ml all/1.0 -foo/1.0 -setenv/1.0} ERR $ts_depre_unload_exit

set ts_depre_unload_exit_force [msg_unload err/1.0 $warn_evalabort]\n\n
append ts_depre_unload_exit_force [msg_top_unload foo/1.0 {} {} err/1.0]
testouterr_cmd bash {ml --force all/1.0 -foo/1.0 -setenv/1.0} $ans_depre_unload_error_force $ts_depre_unload_exit_force


setenv_var TESTSUITE_ABORT_ON_ERROR depun_error

setenv_loaded_module [list setenv/1.0 foo/1.0 err/1.0] [list $mp/setenv/1.0 $mp/foo/1.0 $mp/err/1.0]
setenv_var __MODULES_LMPREREQ err/1.0&foo

set line_num [expr {[cmpversion $tclsh_version 8.6] == -1 ? 2 : 102}]
set ts_depun_error [msg_unload err/1.0 [msg_moderr msg {error msg} $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_depun_error [msg_unload foo/1.0 [err_depun err/1.0]]
testouterr_cmd bash {ml all/1.0 -foo/1.0 -setenv/1.0} ERR $ts_depun_error

set ts_depun_error_force [msg_unload err/1.0 [msg_modwarn msg {error msg} $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_depun_error_force [msg_top_unload foo/1.0 {err/1.0} {} {}]
testouterr_cmd bash {ml --force all/1.0 -foo/1.0 -setenv/1.0} $ans_depun_error_force $ts_depun_error_force


setenv_var TESTSUITE_ABORT_ON_ERROR depun_bad

set line_num [expr {[cmpversion $tclsh_version 8.6] == -1 ? 2 : 108}]
set ts_depun_bad [msg_unload err/1.0 [msg_moderr {invalid command name "bad"} bad $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_depun_bad [msg_unload foo/1.0 [err_depun err/1.0]]
testouterr_cmd bash {ml all/1.0 -foo/1.0 -setenv/1.0} ERR $ts_depun_bad

set ts_depun_bad_force [msg_unload err/1.0 [msg_modwarn {invalid command name "bad"} bad $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_depun_bad_force [msg_top_unload foo/1.0 {err/1.0} {} {}]
testouterr_cmd bash {ml --force all/1.0 -foo/1.0 -setenv/1.0} $ans_depun_error_force $ts_depun_bad_force


setenv_var TESTSUITE_ABORT_ON_ERROR depun_break

set ts_depun_break [msg_unload err/1.0 $err_evalabort]\n\n
append ts_depun_break [msg_unload foo/1.0 [err_depun err/1.0]]
testouterr_cmd bash {ml all/1.0 -foo/1.0 -setenv/1.0} ERR $ts_depun_break

set ts_depun_break_force [msg_unload err/1.0 $warn_evalabort]\n\n
append ts_depun_break_force [msg_top_unload foo/1.0 {err/1.0} {} {}]
testouterr_cmd bash {ml --force all/1.0 -foo/1.0 -setenv/1.0} $ans_depun_error_force $ts_depun_break_force


setenv_var TESTSUITE_ABORT_ON_ERROR depun_exit

set ts_depun_exit [msg_unload err/1.0 $err_evalabort]\n\n
append ts_depun_exit [msg_unload foo/1.0 [err_depun err/1.0]]
testouterr_cmd bash {ml all/1.0 -foo/1.0 -setenv/1.0} ERR $ts_depun_exit

set ts_depun_exit_force [msg_unload err/1.0 $warn_evalabort]\n\n
append ts_depun_exit_force [msg_top_unload foo/1.0 {err/1.0} {} {}]
testouterr_cmd bash {ml --force all/1.0 -foo/1.0 -setenv/1.0} $ans_depun_error_force $ts_depun_exit_force

unsetenv_loaded_module
unsetenv_var __MODULES_LMPREREQ


setenv_loaded_module [list foo/1.0 err/1.0] [list $mp/foo/1.0 $mp/err/1.0]
setenv_var __MODULES_LMTAG err/1.0&sticky
setenv_var TESTSUITE_ABORT_ON_ERROR sticky

set ts_sticky [msg_unload {err/1.0 <S>} $err_stickyunload]
testouterr_cmd bash {ml all/1.0 -err/1.0 -foo/1.0} ERR $ts_sticky

set ts_sticky_warn [msg_unload {err/1.0 <S>} $err_stickyunloadf]
testouterr_cmd bash {ml --force all/1.0 -err/1.0 -foo/1.0} $ans_forced_tag $ts_sticky_warn


setenv_var __MODULES_LMTAG err/1.0&super-sticky
setenv_var TESTSUITE_ABORT_ON_ERROR super-sticky

set ts_supersticky [msg_unload {err/1.0 <sS>} $err_superstickyunload]
testouterr_cmd bash {ml all/1.0 -err/1.0 -foo/1.0} ERR $ts_supersticky

testouterr_cmd bash {ml --force all/1.0 -err/1.0 -foo/1.0} $ans_supersticky_forced $ts_supersticky


setenv_var TESTSUITE_ABORT_ON_ERROR not_loaded

testouterr_cmd bash {ml all/1.0 -unk/1.0 -foo/1.0} $ans_not_loaded {}

testouterr_cmd bash {ml --force all/1.0 -unk/1.0 -foo/1.0} $ans_not_loaded {}


#
# mix of module to load and unload (failure on 1 loading module)
#

setenv_loaded_module [list foo/1.0] [list $mp/foo/1.0]

setenv_var TESTSUITE_ABORT_ON_ERROR bad

set line_num [expr {[cmpversion $tclsh_version 8.6] == -1 ? 2 : 5}]
set ts_bad [msg_load err/1.0 [msg_moderr {invalid command name "bad"} bad $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]
testouterr_cmd bash {ml -foo/1.0 all/1.0 err/1.0} ERR $ts_bad

testouterr_cmd bash {ml --force -foo/1.0 all/1.0 err/1.0} $ans_continue_forced $ts_bad

setenv_var TESTSUITE_ABORT_ON_ERROR break

set ts_break [msg_load err/1.0 $err_evalabort]
testouterr_cmd bash {ml all/1.0 -foo/1.0 err/1.0} ERR $ts_break

testouterr_cmd bash {ml --force all/1.0 -foo/1.0 err/1.0} $ans_continue_forced $ts_break


setenv_var TESTSUITE_ABORT_ON_ERROR exit

set ts_exit [msg_load err/1.0 $err_evalabort]
testouterr_cmd bash {ml all/1.0 -foo/1.0 err/1.0} ERR $ts_exit

testouterr_cmd bash {ml --force all/1.0 -foo/1.0 err/1.0} $ans_continue_forced $ts_exit


setenv_var TESTSUITE_ABORT_ON_ERROR error

set line_num [expr {[cmpversion $tclsh_version 8.6] == -1 ? 2 : 17}]
set ts_error_verbose [msg_unload foo/1.0]\n[msg_load all/1.0]\n\n
append ts_error_verbose [msg_load err/1.0 [msg_moderr msg {error msg} $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]
testouterr_cmd bash {ml -v all/1.0 -foo/1.0 err/1.0} ERR $ts_error_verbose

testouterr_cmd bash {ml --force -v all/1.0 -foo/1.0 err/1.0} $ans_continue_forced $ts_error_verbose


setenv_var TESTSUITE_ABORT_ON_ERROR not_loaded

set ts_not_found $err_path'unk/1.0'
testouterr_cmd bash {ml all/1.0 -foo/1.0 unk/1.0} ERR $ts_not_found

testouterr_cmd bash {ml --force all/1.0 -foo/1.0 unk/1.0} $ans_continue_not_loaded_forced $ts_not_found


#
# mix of module to load and unload (failure on 1 loading module and 1 unloading module)
#

setenv_loaded_module [list foo/1.0 err/1.0] [list $mp/foo/1.0 $mp/err/1.0]

setenv_var TESTSUITE_ABORT_ON_ERROR bad

set line_num [expr {[cmpversion $tclsh_version 8.6] == -1 ? 2 : 5}]
set ts_bad [msg_unload err/1.0 [msg_moderr {invalid command name "bad"} bad $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]
testouterr_cmd bash {ml -foo/1.0 all/1.0 -err/1.0 err/1.0} ERR $ts_bad

set ts_bad_warn [msg_unload err/1.0 [msg_modwarn {invalid command name "bad"} bad $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_bad_warn [msg_load err/1.0 [msg_moderr {invalid command name "bad"} bad $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]
testouterr_cmd bash {ml --force -foo/1.0 all/1.0 -err/1.0 err/1.0} $ans_continue_forced $ts_bad_warn

setenv_var TESTSUITE_ABORT_ON_ERROR break

set ts_break [msg_unload err/1.0 $err_evalabort]
testouterr_cmd bash {ml all/1.0 -err/1.0 -foo/1.0 err/1.0} ERR $ts_break

set ts_break_warn [msg_unload err/1.0 $warn_evalabort]\n\n
append ts_break_warn [msg_load err/1.0 $err_evalabort]
testouterr_cmd bash {ml --force all/1.0 -err/1.0 -foo/1.0 err/1.0} $ans_continue_forced $ts_break_warn


setenv_var TESTSUITE_ABORT_ON_ERROR exit

set ts_exit [msg_unload err/1.0 $err_evalabort]
testouterr_cmd bash {ml all/1.0 -err/1.0 -foo/1.0 err/1.0} ERR $ts_exit

set ts_exit_warn [msg_unload err/1.0 $warn_evalabort]\n\n
append ts_exit_warn [msg_load err/1.0 $err_evalabort]
testouterr_cmd bash {ml --force all/1.0 -err/1.0 -foo/1.0 err/1.0} $ans_continue_forced $ts_exit_warn


setenv_var TESTSUITE_ABORT_ON_ERROR error

set line_num [expr {[cmpversion $tclsh_version 8.6] == -1 ? 2 : 17}]
set ts_error_verbose [msg_unload err/1.0 [msg_moderr msg {error msg} $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]
testouterr_cmd bash {ml -v all/1.0 -err/1.0 -foo/1.0 err/1.0} ERR $ts_error_verbose

set ts_error_verbose_warn [msg_unload err/1.0 [msg_modwarn msg {error msg} $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_error_verbose_warn [msg_unload foo/1.0]\n
append ts_error_verbose_warn [msg_load all/1.0]\n\n
append ts_error_verbose_warn [msg_load err/1.0 [msg_moderr msg {error msg} $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]
testouterr_cmd bash {ml --force -v all/1.0 -err/1.0 -foo/1.0 err/1.0} $ans_continue_forced $ts_error_verbose_warn


setenv_var TESTSUITE_ABORT_ON_ERROR depre_load_error

setenv_loaded_module [list setenv/1.0 foo/1.0 err/1.0] [list $mp/setenv/1.0 $mp/foo/1.0 $mp/err/1.0]
setenv_var __MODULES_LMPREREQ err/1.0&err/1.0|foo
set line_num [expr {[cmpversion $tclsh_version 8.6] == -1 ? 2 : 28}]
set ts_depre_load_error [msg_load err/1.0 [msg_moderr msg {error msg} $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_depre_load_error [msg_unload foo/1.0 [err_depre err/1.0]]
testouterr_cmd bash {ml all/1.0 -foo/1.0 -setenv/1.0 err/1.0} ERR $ts_depre_load_error

set ts_depre_load_error_force [msg_load err/1.0 [msg_moderr msg {error msg} $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_depre_load_error_force [msg_unload foo/1.0 [err_depref err/1.0] {Unloading dependent: err/1.0}]\n\n
append ts_depre_load_error_force [msg_load err/1.0 [msg_moderr msg {error msg} $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]
testouterr_cmd bash {ml --force all/1.0 -foo/1.0 -setenv/1.0 err/1.0} $ans_continue_depre_forced $ts_depre_load_error_force


setenv_var TESTSUITE_ABORT_ON_ERROR depre_load_bad

setenv_loaded_module [list setenv/1.0 foo/1.0 err/1.0] [list $mp/setenv/1.0 $mp/foo/1.0 $mp/err/1.0]
setenv_var __MODULES_LMPREREQ err/1.0&err/1.0|foo
set line_num [expr {[cmpversion $tclsh_version 8.6] == -1 ? 2 : 40}]
set ts_depre_load_bad [msg_load err/1.0 [msg_moderr {invalid command name "bad"} bad $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_depre_load_bad [msg_unload foo/1.0 [err_depre err/1.0]]
testouterr_cmd bash {ml all/1.0 -foo/1.0 -setenv/1.0 err/1.0} ERR $ts_depre_load_bad

set ts_depre_load_bad_force [msg_load err/1.0 [msg_moderr {invalid command name "bad"} bad $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_depre_load_bad_force [msg_unload foo/1.0 [err_depref err/1.0] {Unloading dependent: err/1.0}]\n\n
append ts_depre_load_bad_force [msg_load err/1.0 [msg_moderr {invalid command name "bad"} bad $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]
testouterr_cmd bash {ml --force all/1.0 -foo/1.0 -setenv/1.0 err/1.0} $ans_continue_depre_forced $ts_depre_load_bad_force


setenv_var TESTSUITE_ABORT_ON_ERROR depre_load_break

setenv_loaded_module [list setenv/1.0 foo/1.0 err/1.0] [list $mp/setenv/1.0 $mp/foo/1.0 $mp/err/1.0]
setenv_var __MODULES_LMPREREQ err/1.0&err/1.0|foo
set ts_depre_load_break [msg_load err/1.0 $err_evalabort]\n\n
append ts_depre_load_break [msg_unload foo/1.0 [err_depre err/1.0]]
testouterr_cmd bash {ml all/1.0 -foo/1.0 -setenv/1.0 err/1.0} ERR $ts_depre_load_break

set ts_depre_load_break_force [msg_load err/1.0 $err_evalabort]\n\n
append ts_depre_load_break_force [msg_unload foo/1.0 [err_depref err/1.0] {Unloading dependent: err/1.0}]\n\n
append ts_depre_load_break_force [msg_load err/1.0 $err_evalabort]
testouterr_cmd bash {ml --force all/1.0 -foo/1.0 -setenv/1.0 err/1.0} $ans_continue_depre_forced $ts_depre_load_break_force


setenv_var TESTSUITE_ABORT_ON_ERROR depre_load_exit

setenv_loaded_module [list setenv/1.0 foo/1.0 err/1.0] [list $mp/setenv/1.0 $mp/foo/1.0 $mp/err/1.0]
setenv_var __MODULES_LMPREREQ err/1.0&err/1.0|foo
set ts_depre_load_exit [msg_load err/1.0 $err_evalabort]\n\n
append ts_depre_load_exit [msg_unload foo/1.0 [err_depre err/1.0]]
testouterr_cmd bash {ml all/1.0 -foo/1.0 -setenv/1.0 err/1.0} ERR $ts_depre_load_exit

set ts_depre_load_exit_force [msg_load err/1.0 $err_evalabort]\n\n
append ts_depre_load_exit_force [msg_unload foo/1.0 [err_depref err/1.0] {Unloading dependent: err/1.0}]
testouterr_cmd bash {ml --force all/1.0 -foo/1.0 -setenv/1.0 err/1.0} $ans_mix_depre_load_exit_force $ts_depre_load_exit_force

unsetenv_loaded_module
unsetenv_var __MODULES_LMPREREQ


setenv_loaded_module [list foo/1.0 err/1.0] [list $mp/foo/1.0 $mp/err/1.0]
setenv_var __MODULES_LMTAG err/1.0&sticky
setenv_var TESTSUITE_ABORT_ON_ERROR sticky_forbidden

set ts_sticky [msg_unload {err/1.0 <S>} $err_stickyunload]
testouterr_cmd bash {ml all/1.0 -err/1.0 -foo/1.0 setenv/1.0} ERR $ts_sticky

set ts_sticky_warn [msg_unload {err/1.0 <S>} $err_stickyunloadf]\n\n[err_accessdenied setenv/1.0]
testouterr_cmd bash {ml --force all/1.0 -err/1.0 -foo/1.0 setenv/1.0} $ans_forbidden_forced $ts_sticky_warn


setenv_var __MODULES_LMTAG err/1.0&super-sticky
setenv_var TESTSUITE_ABORT_ON_ERROR super-sticky_forbidden

set ts_supersticky [msg_unload {err/1.0 <sS>} $err_superstickyunload]
testouterr_cmd bash {ml all/1.0 -err/1.0 -foo/1.0 setenv/1.0} ERR $ts_supersticky

set ts_supersticky_continue [msg_unload {err/1.0 <sS>} $err_superstickyunload]\n\n
append ts_supersticky_continue [err_accessdenied setenv/1.0]
testouterr_cmd bash {ml --force all/1.0 -err/1.0 -foo/1.0 setenv/1.0} $ans_mix_continue_forced $ts_supersticky_continue


setenv_var TESTSUITE_ABORT_ON_ERROR not_loaded

set ts_not_found $err_path'unk/1.0'
testouterr_cmd bash {ml all/1.0 -unk/1.0 -foo/1.0 unk/1.0} ERR $ts_not_found

testouterr_cmd bash {ml --force all/1.0 -unk/1.0 -foo/1.0 unk/1.0} $ans_mix_continue_forced $ts_not_found


#
# mix of module to load and unload (failure on 1 unloading module) (continue mode)
#

setenv_var MODULES_ABORT_ON_ERROR reload:switch_unload
setenv_loaded_module [list foo/1.0 err/1.0] [list $mp/foo/1.0 $mp/err/1.0]

setenv_var TESTSUITE_ABORT_ON_ERROR bad

set line_num [expr {[cmpversion $tclsh_version 8.6] == -1 ? 2 : 5}]
set ts_bad [msg_unload err/1.0 [msg_moderr {invalid command name "bad"} bad $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]
testouterr_cmd bash {ml -foo/1.0 all/1.0 -err/1.0} $ans_continue_unload_fail $ts_bad

set ts_bad_warn [msg_unload err/1.0 [msg_modwarn {invalid command name "bad"} bad $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]
testouterr_cmd bash {ml --force -foo/1.0 all/1.0 -err/1.0} $ans_forced $ts_bad_warn

setenv_var TESTSUITE_ABORT_ON_ERROR break

set ts_break [msg_unload err/1.0 $err_evalabort]
testouterr_cmd bash {ml all/1.0 -err/1.0 -foo/1.0} $ans_continue_unload_fail2 $ts_break

set ts_break_warn [msg_unload err/1.0 $warn_evalabort]
testouterr_cmd bash {ml --force all/1.0 -err/1.0 -foo/1.0} $ans_forced $ts_break_warn


setenv_var TESTSUITE_ABORT_ON_ERROR exit

set ts_exit [msg_unload err/1.0 $err_evalabort]
testouterr_cmd bash {ml all/1.0 -err/1.0 -foo/1.0} $ans_continue_unload_fail2 $ts_exit

set ts_exit_warn [msg_unload err/1.0 $warn_evalabort]
testouterr_cmd bash {ml --force all/1.0 -err/1.0 -foo/1.0} $ans_forced $ts_exit_warn


setenv_var TESTSUITE_ABORT_ON_ERROR continue

testouterr_cmd bash {ml all/1.0 -err/1.0 -foo/1.0} $ans_forced {}

testouterr_cmd bash {ml --force all/1.0 -err/1.0 -foo/1.0} $ans_forced {}


setenv_var TESTSUITE_ABORT_ON_ERROR error

set line_num [expr {[cmpversion $tclsh_version 8.6] == -1 ? 2 : 17}]
set ts_error_verbose [msg_unload err/1.0 [msg_moderr msg {error msg} $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_error_verbose [msg_unload foo/1.0]\n
append ts_error_verbose [msg_load all/1.0]
testouterr_cmd bash {ml -v all/1.0 -err/1.0 -foo/1.0} $ans_continue_unload_fail2 $ts_error_verbose

set ts_error_verbose_warn [msg_unload err/1.0 [msg_modwarn msg {error msg} $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_error_verbose_warn [msg_unload foo/1.0]\n
append ts_error_verbose_warn [msg_load all/1.0]
testouterr_cmd bash {ml --force -v all/1.0 -err/1.0 -foo/1.0} $ans_forced $ts_error_verbose_warn


setenv_var TESTSUITE_ABORT_ON_ERROR depre_load_error

setenv_loaded_module [list setenv/1.0 foo/1.0 err/1.0] [list $mp/setenv/1.0 $mp/foo/1.0 $mp/err/1.0]
setenv_var __MODULES_LMPREREQ err/1.0&err/1.0|foo
set line_num [expr {[cmpversion $tclsh_version 8.6] == -1 ? 2 : 28}]
set ts_depre_load_error [msg_load err/1.0 [msg_moderr msg {error msg} $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_depre_load_error [msg_unload foo/1.0 [err_depre err/1.0]]
testouterr_cmd bash {ml all/1.0 -foo/1.0 -setenv/1.0} $ans_continue_depre_unload_fail $ts_depre_load_error

set ts_depre_load_error_force [msg_load err/1.0 [msg_moderr msg {error msg} $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_depre_load_error_force [msg_unload foo/1.0 [err_depref err/1.0] {Unloading dependent: err/1.0}]
testouterr_cmd bash {ml --force all/1.0 -foo/1.0 -setenv/1.0} $ans_depre_error_force $ts_depre_load_error_force


setenv_var TESTSUITE_ABORT_ON_ERROR depre_unload_error

set line_num [expr {[cmpversion $tclsh_version 8.6] == -1 ? 2 : 34}]
set ts_depre_unload_error [msg_unload err/1.0 [msg_moderr msg {error msg} $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_depre_unload_error [msg_unload foo/1.0 [err_depun err/1.0]]
testouterr_cmd bash {ml all/1.0 -foo/1.0 -setenv/1.0} $ans_continue_depre_unload_fail $ts_depre_unload_error

set ts_depre_unload_error_force [msg_unload err/1.0 [msg_modwarn msg {error msg} $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_depre_unload_error_force [msg_top_unload foo/1.0 {} {} err/1.0]
testouterr_cmd bash {ml --force all/1.0 -foo/1.0 -setenv/1.0} $ans_depre_unload_error_force $ts_depre_unload_error_force


setenv_var TESTSUITE_ABORT_ON_ERROR depre_load_bad

setenv_loaded_module [list setenv/1.0 foo/1.0 err/1.0] [list $mp/setenv/1.0 $mp/foo/1.0 $mp/err/1.0]
setenv_var __MODULES_LMPREREQ err/1.0&err/1.0|foo
set line_num [expr {[cmpversion $tclsh_version 8.6] == -1 ? 2 : 40}]
set ts_depre_load_bad [msg_load err/1.0 [msg_moderr {invalid command name "bad"} bad $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_depre_load_bad [msg_unload foo/1.0 [err_depre err/1.0]]
testouterr_cmd bash {ml all/1.0 -foo/1.0 -setenv/1.0} $ans_continue_depre_unload_fail $ts_depre_load_bad

set ts_depre_load_bad_force [msg_load err/1.0 [msg_moderr {invalid command name "bad"} bad $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_depre_load_bad_force [msg_unload foo/1.0 [err_depref err/1.0] {Unloading dependent: err/1.0}]
testouterr_cmd bash {ml --force all/1.0 -foo/1.0 -setenv/1.0} $ans_depre_error_force $ts_depre_load_bad_force


setenv_var TESTSUITE_ABORT_ON_ERROR depre_unload_bad

set line_num [expr {[cmpversion $tclsh_version 8.6] == -1 ? 2 : 46}]
set ts_depre_unload_bad [msg_unload err/1.0 [msg_moderr {invalid command name "bad"} bad $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_depre_unload_bad [msg_unload foo/1.0 [err_depun err/1.0]]
testouterr_cmd bash {ml all/1.0 -foo/1.0 -setenv/1.0} $ans_continue_depre_unload_fail $ts_depre_unload_bad

set ts_depre_unload_bad_force [msg_unload err/1.0 [msg_modwarn {invalid command name "bad"} bad $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_depre_unload_bad_force [msg_top_unload foo/1.0 {} {} err/1.0]
testouterr_cmd bash {ml --force all/1.0 -foo/1.0 -setenv/1.0} $ans_depre_unload_error_force $ts_depre_unload_bad_force


setenv_var TESTSUITE_ABORT_ON_ERROR depre_load_break

setenv_loaded_module [list setenv/1.0 foo/1.0 err/1.0] [list $mp/setenv/1.0 $mp/foo/1.0 $mp/err/1.0]
setenv_var __MODULES_LMPREREQ err/1.0&err/1.0|foo
set ts_depre_load_break [msg_load err/1.0 $err_evalabort]\n\n
append ts_depre_load_break [msg_unload foo/1.0 [err_depre err/1.0]]
testouterr_cmd bash {ml all/1.0 -foo/1.0 -setenv/1.0} $ans_continue_depre_unload_fail $ts_depre_load_break

set ts_depre_load_break_force [msg_load err/1.0 $err_evalabort]\n\n
append ts_depre_load_break_force [msg_unload foo/1.0 [err_depref err/1.0] {Unloading dependent: err/1.0}]
testouterr_cmd bash {ml --force all/1.0 -foo/1.0 -setenv/1.0} $ans_depre_error_force $ts_depre_load_break_force


setenv_var TESTSUITE_ABORT_ON_ERROR depre_unload_break

set ts_depre_unload_break [msg_unload err/1.0 $err_evalabort]\n\n
append ts_depre_unload_break [msg_unload foo/1.0 [err_depun err/1.0]]
testouterr_cmd bash {ml all/1.0 -foo/1.0 -setenv/1.0} $ans_continue_depre_unload_fail $ts_depre_unload_break

set ts_depre_unload_break_force [msg_unload err/1.0 $warn_evalabort]\n\n
append ts_depre_unload_break_force [msg_top_unload foo/1.0 {} {} err/1.0]
testouterr_cmd bash {ml --force all/1.0 -foo/1.0 -setenv/1.0} $ans_depre_unload_error_force $ts_depre_unload_break_force


setenv_var TESTSUITE_ABORT_ON_ERROR depre_load_exit

setenv_loaded_module [list setenv/1.0 foo/1.0 err/1.0] [list $mp/setenv/1.0 $mp/foo/1.0 $mp/err/1.0]
setenv_var __MODULES_LMPREREQ err/1.0&err/1.0|foo
set ts_depre_load_exit [msg_load err/1.0 $err_evalabort]\n\n
append ts_depre_load_exit [msg_unload foo/1.0 [err_depre err/1.0]]
testouterr_cmd bash {ml all/1.0 -foo/1.0 -setenv/1.0} ERR $ts_depre_load_exit

set ts_depre_load_exit_force [msg_load err/1.0 $err_evalabort]\n\n
append ts_depre_load_exit_force [msg_unload foo/1.0 [err_depref err/1.0] {Unloading dependent: err/1.0}]
testouterr_cmd bash {ml --force all/1.0 -foo/1.0 -setenv/1.0} $ans_depre_load_exit_force $ts_depre_load_exit_force


setenv_var TESTSUITE_ABORT_ON_ERROR depre_unload_exit

set ts_depre_unload_exit [msg_unload err/1.0 $err_evalabort]\n\n
append ts_depre_unload_exit [msg_unload foo/1.0 [err_depun err/1.0]]
testouterr_cmd bash {ml all/1.0 -foo/1.0 -setenv/1.0} $ans_continue_depre_unload_fail $ts_depre_unload_exit

set ts_depre_unload_exit_force [msg_unload err/1.0 $warn_evalabort]\n\n
append ts_depre_unload_exit_force [msg_top_unload foo/1.0 {} {} err/1.0]
testouterr_cmd bash {ml --force all/1.0 -foo/1.0 -setenv/1.0} $ans_depre_unload_error_force $ts_depre_unload_exit_force


setenv_var TESTSUITE_ABORT_ON_ERROR depun_error

setenv_loaded_module [list setenv/1.0 foo/1.0 err/1.0] [list $mp/setenv/1.0 $mp/foo/1.0 $mp/err/1.0]
setenv_var __MODULES_LMPREREQ err/1.0&foo

set line_num [expr {[cmpversion $tclsh_version 8.6] == -1 ? 2 : 102}]
set ts_depun_error [msg_unload err/1.0 [msg_moderr msg {error msg} $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_depun_error [msg_unload foo/1.0 [err_depun err/1.0]]
testouterr_cmd bash {ml all/1.0 -foo/1.0 -setenv/1.0} $ans_continue_depre_unload_fail $ts_depun_error

set ts_depun_error_force [msg_unload err/1.0 [msg_modwarn msg {error msg} $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_depun_error_force [msg_top_unload foo/1.0 {err/1.0} {} {}]
testouterr_cmd bash {ml --force all/1.0 -foo/1.0 -setenv/1.0} $ans_depun_error_force $ts_depun_error_force


setenv_var TESTSUITE_ABORT_ON_ERROR depun_bad

set line_num [expr {[cmpversion $tclsh_version 8.6] == -1 ? 2 : 108}]
set ts_depun_bad [msg_unload err/1.0 [msg_moderr {invalid command name "bad"} bad $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_depun_bad [msg_unload foo/1.0 [err_depun err/1.0]]
testouterr_cmd bash {ml all/1.0 -foo/1.0 -setenv/1.0} $ans_continue_depre_unload_fail $ts_depun_bad

set ts_depun_bad_force [msg_unload err/1.0 [msg_modwarn {invalid command name "bad"} bad $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_depun_bad_force [msg_top_unload foo/1.0 {err/1.0} {} {}]
testouterr_cmd bash {ml --force all/1.0 -foo/1.0 -setenv/1.0} $ans_depun_error_force $ts_depun_bad_force


setenv_var TESTSUITE_ABORT_ON_ERROR depun_break

set ts_depun_break [msg_unload err/1.0 $err_evalabort]\n\n
append ts_depun_break [msg_unload foo/1.0 [err_depun err/1.0]]
testouterr_cmd bash {ml all/1.0 -foo/1.0 -setenv/1.0} $ans_continue_depre_unload_fail $ts_depun_break

set ts_depun_break_force [msg_unload err/1.0 $warn_evalabort]\n\n
append ts_depun_break_force [msg_top_unload foo/1.0 {err/1.0} {} {}]
testouterr_cmd bash {ml --force all/1.0 -foo/1.0 -setenv/1.0} $ans_depun_error_force $ts_depun_break_force


setenv_var TESTSUITE_ABORT_ON_ERROR depun_exit

set ts_depun_exit [msg_unload err/1.0 $err_evalabort]\n\n
append ts_depun_exit [msg_unload foo/1.0 [err_depun err/1.0]]
testouterr_cmd bash {ml all/1.0 -foo/1.0 -setenv/1.0} $ans_continue_depre_unload_fail $ts_depun_exit

set ts_depun_exit_force [msg_unload err/1.0 $warn_evalabort]\n\n
append ts_depun_exit_force [msg_top_unload foo/1.0 {err/1.0} {} {}]
testouterr_cmd bash {ml --force all/1.0 -foo/1.0 -setenv/1.0} $ans_depun_error_force $ts_depun_exit_force

unsetenv_loaded_module
unsetenv_var __MODULES_LMPREREQ


setenv_loaded_module [list foo/1.0 err/1.0] [list $mp/foo/1.0 $mp/err/1.0]
setenv_var __MODULES_LMTAG err/1.0&sticky
setenv_var TESTSUITE_ABORT_ON_ERROR sticky

set ts_sticky [msg_unload {err/1.0 <S>} $err_stickyunload]
testouterr_cmd bash {ml all/1.0 -err/1.0 -foo/1.0} $ans_continue_unload_fail2 $ts_sticky

set ts_sticky_warn [msg_unload {err/1.0 <S>} $err_stickyunloadf]
testouterr_cmd bash {ml --force all/1.0 -err/1.0 -foo/1.0} $ans_forced_tag $ts_sticky_warn


setenv_var __MODULES_LMTAG err/1.0&super-sticky
setenv_var TESTSUITE_ABORT_ON_ERROR super-sticky

set ts_supersticky [msg_unload {err/1.0 <sS>} $err_superstickyunload]
testouterr_cmd bash {ml all/1.0 -err/1.0 -foo/1.0} $ans_continue_unload_fail2 $ts_supersticky

testouterr_cmd bash {ml --force all/1.0 -err/1.0 -foo/1.0} $ans_supersticky_forced $ts_supersticky


setenv_var TESTSUITE_ABORT_ON_ERROR not_loaded

testouterr_cmd bash {ml all/1.0 -unk/1.0 -foo/1.0} $ans_not_loaded {}

testouterr_cmd bash {ml --force all/1.0 -unk/1.0 -foo/1.0} $ans_not_loaded {}


#
# mix of module to load and unload (failure on 1 loading module) (continue mode)
#

setenv_loaded_module [list foo/1.0] [list $mp/foo/1.0]

setenv_var TESTSUITE_ABORT_ON_ERROR bad

set line_num [expr {[cmpversion $tclsh_version 8.6] == -1 ? 2 : 5}]
set ts_bad [msg_load err/1.0 [msg_moderr {invalid command name "bad"} bad $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]
testouterr_cmd bash {ml -foo/1.0 all/1.0 err/1.0} $ans_continue_load_fail $ts_bad

testouterr_cmd bash {ml --force -foo/1.0 all/1.0 err/1.0} $ans_continue_forced $ts_bad

setenv_var TESTSUITE_ABORT_ON_ERROR break

set ts_break [msg_load err/1.0 $err_evalabort]
testouterr_cmd bash {ml all/1.0 -foo/1.0 err/1.0} $ans_continue_load_fail $ts_break

testouterr_cmd bash {ml --force all/1.0 -foo/1.0 err/1.0} $ans_continue_forced $ts_break


setenv_var TESTSUITE_ABORT_ON_ERROR exit

set ts_exit [msg_load err/1.0 $err_evalabort]
testouterr_cmd bash {ml all/1.0 -foo/1.0 err/1.0} $ans_continue_load_fail $ts_exit

testouterr_cmd bash {ml --force all/1.0 -foo/1.0 err/1.0} $ans_continue_forced $ts_exit


setenv_var TESTSUITE_ABORT_ON_ERROR error

set line_num [expr {[cmpversion $tclsh_version 8.6] == -1 ? 2 : 17}]
set ts_error_verbose [msg_unload foo/1.0]\n[msg_load all/1.0]\n\n
append ts_error_verbose [msg_load err/1.0 [msg_moderr msg {error msg} $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]
testouterr_cmd bash {ml -v all/1.0 -foo/1.0 err/1.0} $ans_continue_load_fail $ts_error_verbose

testouterr_cmd bash {ml --force -v all/1.0 -foo/1.0 err/1.0} $ans_continue_forced $ts_error_verbose


setenv_var TESTSUITE_ABORT_ON_ERROR not_loaded

set ts_not_found $err_path'unk/1.0'
testouterr_cmd bash {ml all/1.0 -foo/1.0 unk/1.0} $ans_continue_load_fail2 $ts_not_found

testouterr_cmd bash {ml --force all/1.0 -foo/1.0 unk/1.0} $ans_continue_not_loaded_forced $ts_not_found


#
# mix of module to load and unload (failure on 1 loading module and 1 unloading module) (continue mode)
#

setenv_loaded_module [list foo/1.0 err/1.0] [list $mp/foo/1.0 $mp/err/1.0]

setenv_var TESTSUITE_ABORT_ON_ERROR bad

set line_num [expr {[cmpversion $tclsh_version 8.6] == -1 ? 2 : 5}]
set ts_bad [msg_unload err/1.0 [msg_moderr {invalid command name "bad"} bad $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]
testouterr_cmd bash {ml -foo/1.0 all/1.0 -err/1.0 err/1.0} $ans_continue_unload_fail $ts_bad

set ts_bad_warn [msg_unload err/1.0 [msg_modwarn {invalid command name "bad"} bad $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_bad_warn [msg_load err/1.0 [msg_moderr {invalid command name "bad"} bad $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]
testouterr_cmd bash {ml --force -foo/1.0 all/1.0 -err/1.0 err/1.0} $ans_continue_forced $ts_bad_warn

setenv_var TESTSUITE_ABORT_ON_ERROR break

set ts_break [msg_unload err/1.0 $err_evalabort]
testouterr_cmd bash {ml all/1.0 -err/1.0 -foo/1.0 err/1.0} $ans_continue_unload_fail2 $ts_break

set ts_break_warn [msg_unload err/1.0 $warn_evalabort]\n\n
append ts_break_warn [msg_load err/1.0 $err_evalabort]
testouterr_cmd bash {ml --force all/1.0 -err/1.0 -foo/1.0 err/1.0} $ans_continue_forced $ts_break_warn


setenv_var TESTSUITE_ABORT_ON_ERROR exit

set ts_exit [msg_unload err/1.0 $err_evalabort]
testouterr_cmd bash {ml all/1.0 -err/1.0 -foo/1.0 err/1.0} $ans_continue_unload_fail2 $ts_exit

set ts_exit_warn [msg_unload err/1.0 $warn_evalabort]\n\n
append ts_exit_warn [msg_load err/1.0 $err_evalabort]
testouterr_cmd bash {ml --force all/1.0 -err/1.0 -foo/1.0 err/1.0} $ans_continue_forced $ts_exit_warn


setenv_var TESTSUITE_ABORT_ON_ERROR error

set line_num [expr {[cmpversion $tclsh_version 8.6] == -1 ? 2 : 17}]
set ts_error_verbose [msg_unload err/1.0 [msg_moderr msg {error msg} $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_error_verbose [msg_unload foo/1.0]\n
append ts_error_verbose [msg_load all/1.0]
testouterr_cmd bash {ml -v all/1.0 -err/1.0 -foo/1.0 err/1.0} $ans_continue_unload_fail2 $ts_error_verbose

set ts_error_verbose_warn [msg_unload err/1.0 [msg_modwarn msg {error msg} $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_error_verbose_warn [msg_unload foo/1.0]\n
append ts_error_verbose_warn [msg_load all/1.0]\n\n
append ts_error_verbose_warn [msg_load err/1.0 [msg_moderr msg {error msg} $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]
testouterr_cmd bash {ml --force -v all/1.0 -err/1.0 -foo/1.0 err/1.0} $ans_continue_forced $ts_error_verbose_warn


setenv_var TESTSUITE_ABORT_ON_ERROR depre_load_error

setenv_loaded_module [list setenv/1.0 foo/1.0 err/1.0] [list $mp/setenv/1.0 $mp/foo/1.0 $mp/err/1.0]
setenv_var __MODULES_LMPREREQ err/1.0&err/1.0|foo
set line_num [expr {[cmpversion $tclsh_version 8.6] == -1 ? 2 : 28}]
set ts_depre_load_error [msg_load err/1.0 [msg_moderr msg {error msg} $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_depre_load_error [msg_unload foo/1.0 [err_depre err/1.0]]
testouterr_cmd bash {ml all/1.0 -foo/1.0 -setenv/1.0 err/1.0} $ans_continue_depre_unload_fail $ts_depre_load_error

set ts_depre_load_error_force [msg_load err/1.0 [msg_moderr msg {error msg} $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_depre_load_error_force [msg_unload foo/1.0 [err_depref err/1.0] {Unloading dependent: err/1.0}]\n\n
append ts_depre_load_error_force [msg_load err/1.0 [msg_moderr msg {error msg} $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]
testouterr_cmd bash {ml --force all/1.0 -foo/1.0 -setenv/1.0 err/1.0} $ans_continue_depre_forced $ts_depre_load_error_force


setenv_var TESTSUITE_ABORT_ON_ERROR depre_load_bad

setenv_loaded_module [list setenv/1.0 foo/1.0 err/1.0] [list $mp/setenv/1.0 $mp/foo/1.0 $mp/err/1.0]
setenv_var __MODULES_LMPREREQ err/1.0&err/1.0|foo
set line_num [expr {[cmpversion $tclsh_version 8.6] == -1 ? 2 : 40}]
set ts_depre_load_bad [msg_load err/1.0 [msg_moderr {invalid command name "bad"} bad $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_depre_load_bad [msg_unload foo/1.0 [err_depre err/1.0]]
testouterr_cmd bash {ml all/1.0 -foo/1.0 -setenv/1.0 err/1.0} $ans_continue_depre_unload_fail $ts_depre_load_bad

set ts_depre_load_bad_force [msg_load err/1.0 [msg_moderr {invalid command name "bad"} bad $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]\n\n
append ts_depre_load_bad_force [msg_unload foo/1.0 [err_depref err/1.0] {Unloading dependent: err/1.0}]\n\n
append ts_depre_load_bad_force [msg_load err/1.0 [msg_moderr {invalid command name "bad"} bad $mp/err/1.0 $line_num {} {} {} $custom_error_trace]]
testouterr_cmd bash {ml --force all/1.0 -foo/1.0 -setenv/1.0 err/1.0} $ans_continue_depre_forced $ts_depre_load_bad_force


setenv_var TESTSUITE_ABORT_ON_ERROR depre_load_break

setenv_loaded_module [list setenv/1.0 foo/1.0 err/1.0] [list $mp/setenv/1.0 $mp/foo/1.0 $mp/err/1.0]
setenv_var __MODULES_LMPREREQ err/1.0&err/1.0|foo
set ts_depre_load_break [msg_load err/1.0 $err_evalabort]\n\n
append ts_depre_load_break [msg_unload foo/1.0 [err_depre err/1.0]]
testouterr_cmd bash {ml all/1.0 -foo/1.0 -setenv/1.0 err/1.0} $ans_continue_depre_unload_fail $ts_depre_load_break

set ts_depre_load_break_force [msg_load err/1.0 $err_evalabort]\n\n
append ts_depre_load_break_force [msg_unload foo/1.0 [err_depref err/1.0] {Unloading dependent: err/1.0}]\n\n
append ts_depre_load_break_force [msg_load err/1.0 $err_evalabort]
testouterr_cmd bash {ml --force all/1.0 -foo/1.0 -setenv/1.0 err/1.0} $ans_continue_depre_forced $ts_depre_load_break_force


setenv_var TESTSUITE_ABORT_ON_ERROR depre_load_exit

setenv_loaded_module [list setenv/1.0 foo/1.0 err/1.0] [list $mp/setenv/1.0 $mp/foo/1.0 $mp/err/1.0]
setenv_var __MODULES_LMPREREQ err/1.0&err/1.0|foo
set ts_depre_load_exit [msg_load err/1.0 $err_evalabort]\n\n
append ts_depre_load_exit [msg_unload foo/1.0 [err_depre err/1.0]]
testouterr_cmd bash {ml all/1.0 -foo/1.0 -setenv/1.0 err/1.0} ERR $ts_depre_load_exit

set ts_depre_load_exit_force [msg_load err/1.0 $err_evalabort]\n\n
append ts_depre_load_exit_force [msg_unload foo/1.0 [err_depref err/1.0] {Unloading dependent: err/1.0}]
testouterr_cmd bash {ml --force all/1.0 -foo/1.0 -setenv/1.0 err/1.0} $ans_mix_depre_load_exit_force $ts_depre_load_exit_force

unsetenv_loaded_module
unsetenv_var __MODULES_LMPREREQ


setenv_loaded_module [list foo/1.0 err/1.0] [list $mp/foo/1.0 $mp/err/1.0]
setenv_var __MODULES_LMTAG err/1.0&sticky
setenv_var TESTSUITE_ABORT_ON_ERROR sticky_forbidden

set ts_sticky [msg_unload {err/1.0 <S>} $err_stickyunload]\n\n
append ts_sticky [err_accessdenied setenv/1.0]
testouterr_cmd bash {ml all/1.0 -err/1.0 -foo/1.0 setenv/1.0} $ans_continue_unload_fail2 $ts_sticky

set ts_sticky_warn [msg_unload {err/1.0 <S>} $err_stickyunloadf]\n\n[err_accessdenied setenv/1.0]
testouterr_cmd bash {ml --force all/1.0 -err/1.0 -foo/1.0 setenv/1.0} $ans_forbidden_forced $ts_sticky_warn


setenv_var __MODULES_LMTAG err/1.0&super-sticky
setenv_var TESTSUITE_ABORT_ON_ERROR super-sticky_forbidden

set ts_supersticky [msg_unload {err/1.0 <sS>} $err_superstickyunload]\n\n
append ts_supersticky [err_accessdenied setenv/1.0]
testouterr_cmd bash {ml all/1.0 -err/1.0 -foo/1.0 setenv/1.0} $ans_continue_unload_fail2 $ts_supersticky

set ts_supersticky_continue [msg_unload {err/1.0 <sS>} $err_superstickyunload]\n\n
append ts_supersticky_continue [err_accessdenied setenv/1.0]
testouterr_cmd bash {ml --force all/1.0 -err/1.0 -foo/1.0 setenv/1.0} $ans_mix_continue_forced $ts_supersticky_continue


setenv_var TESTSUITE_ABORT_ON_ERROR not_loaded

set ts_not_found $err_path'unk/1.0'
testouterr_cmd bash {ml all/1.0 -unk/1.0 -foo/1.0 unk/1.0} $ans_continue_unload_fail2 $ts_not_found

testouterr_cmd bash {ml --force all/1.0 -unk/1.0 -foo/1.0 unk/1.0} $ans_mix_continue_forced $ts_not_found


#
#  Cleanup
#

reset_test_env
