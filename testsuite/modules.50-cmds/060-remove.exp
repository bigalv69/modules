##############################################################################
#   Modules Revision 3.0
#   Providing a flexible user environment
#
#   File:		modules.50-cmds/%M%
#   Revision:		%I%
#   First Edition:	1995/12/06
#   Last Mod.:		%U%, %G%
#
#   Authors:		Jens Hamisch, Jens.Hamisch@Strawberry.COM
#
#   Description:	Testuite testsequence
#   Command:		load
#   Modulefiles:	remove/2.0
#   Sub-Command:
#
#   Comment:	%C{
#			Tests the 'remove-path' module subcommand for all
#			allowed shell types.
#		}C%
#
##############################################################################

skip_if_quick_mode

#
#  Variables. This test forces a module load command. It will result in the
#    environment variables "_LMFILES_", "LOADEDMODULES" and "PATH" to
#    be set up
#

set module "remove/2.0"
set modulefile "$modpath/$module"

set old_path $env(PATH)
set ts_path "/this/is/the/modules/testsuite"
set new_path "$old_path:$ts_path"

#
#  Set up the environment for reversal ...
#

set env(PATH) "$new_path"

#
#  For the different shells ...
#

lappend ans [list set PATH $old_path]
lappend ans [list set _LMFILES_ $modulefile]
lappend ans [list set LOADEDMODULES $module]

#
#  The tests
#

test_cmd_re "ALL" "load $module" $ans

#
# Try bad argument list: missing variable name
#

set module "remove/0.3"
set modulefile "$modpath/$module"
set ts_err [msg_moderr "remove-path $msg_needenvvarname" {remove-path } $modulefile 24]
testouterr_cmd "sh" "load $module" "ERR" [msg_load $module $ts_err]

#
# Try bad argument list: missing variable value
#

set module "remove/0.4"
set modulefile "$modpath/$module"
set ts_err [msg_moderr "remove-path $msg_needenvvarval PATH" {remove-path PATH} $modulefile 24]
testouterr_cmd "sh" "load $module" "ERR" [msg_load $module $ts_err]

#
# Try bad argument list: empty variable name
#

set module "remove/0.5"
set modulefile "$modpath/$module"
set ts_err [msg_moderr "remove-path $msg_validenvvarname" {remove-path {}} $modulefile 24]
testouterr_cmd "sh" "load $module" "ERR" [msg_load $module $ts_err]

#
# Try command switches passed after variable name
#

setenv_path_var testsuite --delim=,
setenv_path_var testsuite2 , foo
set module "remove/1.8"
set modulefile "$modpath/$module"
set ans [list]
lappend ans [list set testsuite2 foo]
lappend ans [list unset testsuite3]
lappend ans [list set _LMFILES_ $modulefile]
lappend ans [list set LOADEDMODULES $module]
lappend ans [list unset testsuite]
testouterr_cmd_re "sh" "load $module" $ans {}
unsetenv_path_var testsuite
unsetenv_path_var testsuite2


#
# Remove multiple paths passed as one string
#

set module "remove/2.3"
set modulefile "$modpath/$module"

set env(__MODULES_SHARE_FOO) ":1"
set env(FOO) "/path/to/dir1:/modules/testsuite2.2:/modules/testsuite2.2/2.2:"

set ans [list]
lappend ans [list unset __MODULES_SHARE_FOO]
lappend ans [list set FOO "/path/to/dir1"]
lappend ans [list set _LMFILES_ $modulefile]
lappend ans [list set LOADEDMODULES $module]

testouterr_cmd "sh" "load $module" $ans ""

#
# Remove multiple paths passed as multiple strings
#

set module "remove/2.4"
set modulefile "$modpath/$module"

set ans [list]
lappend ans [list unset __MODULES_SHARE_FOO]
lappend ans [list set FOO "/path/to/dir1"]
lappend ans [list set _LMFILES_ $modulefile]
lappend ans [list set LOADEDMODULES $module]

testouterr_cmd "sh" "load $module" $ans ""


#
# Remove unknown path on a var set empty
#

set module "remove/3.0"
set modulefile "$modpath/$module"

set env(__MODULES_SHARE_FOO) ":1"
set env(FOO) ""

set ans [list]
lappend ans [list set __MODULES_SHARE_FOO ":1"]
lappend ans [list set FOO ""]
lappend ans [list set _LMFILES_ $modulefile]
lappend ans [list set LOADEDMODULES $module]

testouterr_cmd "sh" "load $module" $ans ""


#
# Remove path added in duplication mode
#

set module "remove/3.0"
set modulefile "$modpath/$module"

unset env(__MODULES_SHARE_FOO)
set env(FOO) "/path/to/dir1:/path/to/dir2:/path/to/dir1"

set ans [list]
lappend ans [list set FOO "/path/to/dir2"]
lappend ans [list set _LMFILES_ $modulefile]
lappend ans [list set LOADEDMODULES $module]

testouterr_cmd "sh" "load $module" $ans ""

set ans [list]
lappend ans [list set FOO "/path/to/dir2"]
lappend ans [list set _LMFILES_ $modulefile]
lappend ans [list set LOADEDMODULES $module]

testouterr_cmd "sh" "load $module" $ans ""

set env(__MODULES_SHARE_FOO) "/path/to/dir1:2"

set ans [list]
lappend ans [list unset __MODULES_SHARE_FOO]
lappend ans [list set FOO "/path/to/dir1:/path/to/dir2"]
lappend ans [list set _LMFILES_ $modulefile]
lappend ans [list set LOADEDMODULES $module]

testouterr_cmd "sh" "load $module" $ans ""

set env(__MODULES_SHARE_FOO) "/path/to/dir1:3"

set ans [list]
lappend ans [list set __MODULES_SHARE_FOO "/path/to/dir1:2"]
lappend ans [list set FOO "/path/to/dir1:/path/to/dir2:/path/to/dir1"]
lappend ans [list set _LMFILES_ $modulefile]
lappend ans [list set LOADEDMODULES $module]

testouterr_cmd "sh" "load $module" $ans ""

set module "remove/3.1"
set modulefile "$modpath/$module"

set env(__MODULES_SHARE_FOO) "/path/to/dir1:2"
set env(FOO) "/path/to/dir1:/path/to/dir2:/path/to/dir1:/path/to/dir1"

set ans [list]
lappend ans [list unset __MODULES_SHARE_FOO]
lappend ans [list set FOO "/path/to/dir1:/path/to/dir2"]
lappend ans [list set _LMFILES_ $modulefile]
lappend ans [list set LOADEDMODULES $module]

testouterr_cmd "sh" "load $module" $ans [msg_load $module "$warn_msgs: --duplicates option has no effect on remove-path"]

# test unload mode on remove-path --duplicates
setenv_loaded_module [list $module] [list $modulefile]
setenv_var FOO /path/to/dir1:/path/to/dir2
unsetenv_var __MODULES_SHARE_FOO
set ans [list]
lappend ans [list unset _LMFILES_]
lappend ans [list unset LOADEDMODULES]
testouterr_cmd sh "unload $module" $ans [msg_unload $module "$warn_msgs: --duplicates option has no effect on remove-path"]

unsetenv_loaded_module


#
# Remove path in index mode
#

set module "remove/4.0"
set modulefile "$modpath/$module"
set ts_err [msg_moderr "remove-path $msg_valididxvalue" {remove-path --index FOO /path/to/dir1} $modulefile 24]

# not a number
testouterr_cmd "sh" "load $module" "ERR" [msg_load $module $ts_err]

set module "remove/4.1"
set modulefile "$modpath/$module"

set env(__MODULES_SHARE_FOO) ":1"
set env(FOO) ""

set ans [list]
lappend ans [list set __MODULES_SHARE_FOO ":1"]
lappend ans [list set FOO ""]
lappend ans [list set _LMFILES_ $modulefile]
lappend ans [list set LOADEDMODULES $module]

# out of bound
testouterr_cmd "sh" "load $module" $ans ""

set env(__MODULES_SHARE_FOO) "/path/to/dir1:2"
set env(FOO) "/path/to/dir1:/path/to/dir2:/path/to/dir1:/path/to/dir1"

set ans [list]
lappend ans [list set __MODULES_SHARE_FOO "/path/to/dir1:2"]
lappend ans [list set FOO "/path/to/dir1:/path/to/dir1:/path/to/dir1"]
lappend ans [list set _LMFILES_ $modulefile]
lappend ans [list set LOADEDMODULES $module]

testouterr_cmd "sh" "load $module" $ans ""

set env(__MODULES_SHARE_FOO) "/path/to/dir1:2:/path/to/dir2:2"
set env(FOO) "/path/to/dir1:/path/to/dir2:/path/to/dir1:/path/to/dir1"

set ans [list]
lappend ans [list set __MODULES_SHARE_FOO "/path/to/dir1:2"]
lappend ans [list set FOO "/path/to/dir1:/path/to/dir2:/path/to/dir1:/path/to/dir1"]
lappend ans [list set _LMFILES_ $modulefile]
lappend ans [list set LOADEDMODULES $module]

testouterr_cmd "sh" "load $module" $ans ""

set module "remove/4.2"
set modulefile "$modpath/$module"

set env(__MODULES_SHARE_FOO) "/path/to/dir1:2:/path/to/dir2:2"
set env(FOO) "/path/to/dir1:/path/to/dir2:/path/to/dir1:/path/to/dir1"

set ans [list]
lappend ans [list unset __MODULES_SHARE_FOO]
lappend ans [list set FOO "/path/to/dir1:/path/to/dir2:/path/to/dir1"]
lappend ans [list set _LMFILES_ $modulefile]
lappend ans [list set LOADEDMODULES $module]

testouterr_cmd "sh" "load $module" $ans ""

unset env(__MODULES_SHARE_FOO)
set env(FOO) "/path/to/dir1:/path/to/dir2:/path/to/dir1:/path/to/dir1"

set ans [list]
lappend ans [list set FOO "/path/to/dir1:/path/to/dir1"]
lappend ans [list set _LMFILES_ $modulefile]
lappend ans [list set LOADEDMODULES $module]

testouterr_cmd "sh" "load $module" $ans ""


#
#  Clean up the environment
#

set env(PATH) "$old_path"
unset env(FOO)

#
#  Cleanup
#

reset_test_env
